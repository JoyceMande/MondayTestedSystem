DECLARE @CurrentMigration [nvarchar](max)

IF object_id('[dbo].[__MigrationHistory]') IS NOT NULL
    SELECT @CurrentMigration =
        (SELECT TOP (1) 
        [Project1].[MigrationId] AS [MigrationId]
        FROM ( SELECT 
        [Extent1].[MigrationId] AS [MigrationId]
        FROM [dbo].[__MigrationHistory] AS [Extent1]
        WHERE [Extent1].[ContextKey] = N'SCRIPTERS.Migrations.Configuration'
        )  AS [Project1]
        ORDER BY [Project1].[MigrationId] DESC)

IF @CurrentMigration IS NULL
    SET @CurrentMigration = '0'

IF @CurrentMigration < '201910061247127_InitialDatabase'
BEGIN
    CREATE TABLE [dbo].[Audits] (
        [Id] [int] NOT NULL IDENTITY,
        [TransactionDate] [datetime] NOT NULL,
        [TransactionTime] [datetime] NOT NULL,
        [User] [nvarchar](max),
        [TransactionType] [nvarchar](max),
        [TransactionDetails] [nvarchar](max),
        CONSTRAINT [PK_dbo.Audits] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[BookCategories] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max) NOT NULL,
        [Description] [nvarchar](1000),
        CONSTRAINT [PK_dbo.BookCategories] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[Books] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [CostPrice] [decimal](18, 2) NOT NULL,
        [SalePrice] [decimal](18, 2) NOT NULL,
        [Code] [nvarchar](max) NOT NULL,
        [Description] [nvarchar](1000),
        [ItemCategoryId] [int] NOT NULL,
        [Image] [varbinary](max),
        CONSTRAINT [PK_dbo.Books] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_ItemCategoryId] ON [dbo].[Books]([ItemCategoryId])
    CREATE TABLE [dbo].[PurchaseDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [ItemId] [int] NOT NULL,
        [Quantity] [int] NOT NULL,
        [Price] [decimal](18, 2) NOT NULL,
        [PurchaseId] [int] NOT NULL,
        CONSTRAINT [PK_dbo.PurchaseDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_ItemId] ON [dbo].[PurchaseDetails]([ItemId])
    CREATE INDEX [IX_PurchaseId] ON [dbo].[PurchaseDetails]([PurchaseId])
    CREATE TABLE [dbo].[Purchases] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [OutletId] [int] NOT NULL,
        [PurchaseNumber] [nvarchar](max),
        [EmployeeId] [int] NOT NULL,
        [PurchaseDate] [datetime] NOT NULL,
        [SupplierId] [int] NOT NULL,
        [Remarks] [nvarchar](max),
        [Total] [decimal](18, 2) NOT NULL,
        [DueAmount] [decimal](18, 2) NOT NULL,
        [Customer_Id] [int],
        CONSTRAINT [PK_dbo.Purchases] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_OutletId] ON [dbo].[Purchases]([OutletId])
    CREATE INDEX [IX_EmployeeId] ON [dbo].[Purchases]([EmployeeId])
    CREATE INDEX [IX_SupplierId] ON [dbo].[Purchases]([SupplierId])
    CREATE INDEX [IX_Customer_Id] ON [dbo].[Purchases]([Customer_Id])
    CREATE TABLE [dbo].[Employees] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max),
        [OutletId] [int] NOT NULL,
        [JoiningDate] [datetime] NOT NULL,
        [Image] [varbinary](max),
        [ContactNo] [nvarchar](max) NOT NULL,
        [Email] [nvarchar](max) NOT NULL,
        [ReferenceId] [int],
        [EmerContactNo] [nvarchar](max) NOT NULL,
        [NationalId] [nvarchar](max),
        [FathersName] [nvarchar](max),
        [MothersName] [nvarchar](max),
        [PresentAddress] [nvarchar](max),
        [PermanentAddress] [nvarchar](max) NOT NULL,
        [RoleTyeId] [int] NOT NULL,
        [RoleType_Id] [int],
        CONSTRAINT [PK_dbo.Employees] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_OutletId] ON [dbo].[Employees]([OutletId])
    CREATE INDEX [IX_ReferenceId] ON [dbo].[Employees]([ReferenceId])
    CREATE INDEX [IX_RoleType_Id] ON [dbo].[Employees]([RoleType_Id])
    CREATE TABLE [dbo].[Expenses] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [OutletId] [int] NOT NULL,
        [EmployeeId] [int] NOT NULL,
        [ExpenseDate] [datetime] NOT NULL,
        [Total] [decimal](18, 2) NOT NULL,
        [Due] [decimal](18, 2) NOT NULL,
        CONSTRAINT [PK_dbo.Expenses] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_OutletId] ON [dbo].[Expenses]([OutletId])
    CREATE INDEX [IX_EmployeeId] ON [dbo].[Expenses]([EmployeeId])
    CREATE TABLE [dbo].[ExpenseDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [ExpenseId] [int] NOT NULL,
        [ExpenseItemId] [int] NOT NULL,
        [Quantity] [int] NOT NULL,
        [Description] [nvarchar](1000),
        [Amount] [decimal](18, 2) NOT NULL,
        CONSTRAINT [PK_dbo.ExpenseDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_ExpenseId] ON [dbo].[ExpenseDetails]([ExpenseId])
    CREATE INDEX [IX_ExpenseItemId] ON [dbo].[ExpenseDetails]([ExpenseItemId])
    CREATE TABLE [dbo].[ExpenseItems] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max) NOT NULL,
        [Description] [nvarchar](1000),
        [Image] [varbinary](max),
        [ExpenseCategoryId] [int] NOT NULL,
        CONSTRAINT [PK_dbo.ExpenseItems] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_ExpenseCategoryId] ON [dbo].[ExpenseItems]([ExpenseCategoryId])
    CREATE TABLE [dbo].[ExpenseCategories] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max) NOT NULL,
        [Description] [nvarchar](1000),
        CONSTRAINT [PK_dbo.ExpenseCategories] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[Outlets] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max) NOT NULL,
        [ContactNo] [nvarchar](max),
        [Address] [nvarchar](1000) NOT NULL,
        CONSTRAINT [PK_dbo.Outlets] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[InventorySales] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [OutletId] [int] NOT NULL,
        [SaleNumber] [nvarchar](max),
        [EmployeeId] [int] NOT NULL,
        [SaleDate] [datetime] NOT NULL,
        [CusContractNo] [nvarchar](max) NOT NULL,
        [CusName] [nvarchar](max) NOT NULL,
        [SubTotal] [decimal](18, 2) NOT NULL,
        [Vat] [decimal](18, 2) NOT NULL,
        [Discount] [decimal](18, 2) NOT NULL,
        [Total] [decimal](18, 2) NOT NULL,
        [DueAmount] [decimal](18, 2) NOT NULL,
        CONSTRAINT [PK_dbo.InventorySales] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_OutletId] ON [dbo].[InventorySales]([OutletId])
    CREATE INDEX [IX_EmployeeId] ON [dbo].[InventorySales]([EmployeeId])
    CREATE TABLE [dbo].[InventorySalesDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [InventoryId] [int] NOT NULL,
        [Quantity] [int] NOT NULL,
        [Price] [decimal](18, 2) NOT NULL,
        [StockQuantity] [int] NOT NULL,
        [InventorySaleId] [int] NOT NULL,
        CONSTRAINT [PK_dbo.InventorySalesDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_InventoryId] ON [dbo].[InventorySalesDetails]([InventoryId])
    CREATE INDEX [IX_InventorySaleId] ON [dbo].[InventorySalesDetails]([InventorySaleId])
    CREATE TABLE [dbo].[Inventories] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [CostPrice] [decimal](18, 2) NOT NULL,
        [SalePrice] [decimal](18, 2) NOT NULL,
        [Code] [nvarchar](max) NOT NULL,
        [Description] [nvarchar](1000),
        [ItemCategoryId] [int] NOT NULL,
        [Image] [varbinary](max),
        CONSTRAINT [PK_dbo.Inventories] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_ItemCategoryId] ON [dbo].[Inventories]([ItemCategoryId])
    CREATE TABLE [dbo].[InventoryCategories] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max) NOT NULL,
        [Description] [nvarchar](1000),
        CONSTRAINT [PK_dbo.InventoryCategories] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[OrderDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [ItemId] [int] NOT NULL,
        [Quantity] [int] NOT NULL,
        [Price] [decimal](18, 2) NOT NULL,
        [OrderId] [int] NOT NULL,
        CONSTRAINT [PK_dbo.OrderDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_ItemId] ON [dbo].[OrderDetails]([ItemId])
    CREATE INDEX [IX_OrderId] ON [dbo].[OrderDetails]([OrderId])
    CREATE TABLE [dbo].[Orders] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [OutletId] [int] NOT NULL,
        [OrderNumber] [nvarchar](max),
        [EmployeeId] [int] NOT NULL,
        [OrderDate] [datetime] NOT NULL,
        [SupplierId] [int] NOT NULL,
        [Remarks] [nvarchar](max),
        [Total] [decimal](18, 2) NOT NULL,
        [DueAmount] [decimal](18, 2) NOT NULL,
        [Customer_Id] [int],
        CONSTRAINT [PK_dbo.Orders] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_OutletId] ON [dbo].[Orders]([OutletId])
    CREATE INDEX [IX_EmployeeId] ON [dbo].[Orders]([EmployeeId])
    CREATE INDEX [IX_SupplierId] ON [dbo].[Orders]([SupplierId])
    CREATE INDEX [IX_Customer_Id] ON [dbo].[Orders]([Customer_Id])
    CREATE TABLE [dbo].[Suppliers] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max),
        [ContactNo] [nvarchar](max) NOT NULL,
        [Email] [nvarchar](max) NOT NULL,
        [Image] [varbinary](max),
        [Address] [nvarchar](1000),
        [SupplierType] [nvarchar](max) NOT NULL,
        CONSTRAINT [PK_dbo.Suppliers] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[Sales] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [OutletId] [int] NOT NULL,
        [SaleNumber] [nvarchar](max),
        [EmployeeId] [int] NOT NULL,
        [SaleDate] [datetime] NOT NULL,
        [CusContractNo] [nvarchar](max) NOT NULL,
        [CusName] [nvarchar](max) NOT NULL,
        [SubTotal] [decimal](18, 2) NOT NULL,
        [Vat] [decimal](18, 2) NOT NULL,
        [Discount] [decimal](18, 2) NOT NULL,
        [Total] [decimal](18, 2) NOT NULL,
        [DueAmount] [decimal](18, 2) NOT NULL,
        CONSTRAINT [PK_dbo.Sales] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_OutletId] ON [dbo].[Sales]([OutletId])
    CREATE INDEX [IX_EmployeeId] ON [dbo].[Sales]([EmployeeId])
    CREATE TABLE [dbo].[SalesDetails] (
        [Id] [int] NOT NULL IDENTITY,
        [IsDeleted] [bit] NOT NULL,
        [BookId] [int] NOT NULL,
        [Quantity] [int] NOT NULL,
        [Price] [decimal](18, 2) NOT NULL,
        [StockQuantity] [int] NOT NULL,
        [SaleId] [int] NOT NULL,
        CONSTRAINT [PK_dbo.SalesDetails] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_BookId] ON [dbo].[SalesDetails]([BookId])
    CREATE INDEX [IX_SaleId] ON [dbo].[SalesDetails]([SaleId])
    CREATE TABLE [dbo].[RoleTypes] (
        [Id] [int] NOT NULL IDENTITY,
        [Title] [nvarchar](max),
        [CanOrder] [bit] NOT NULL,
        [CanPurchase] [bit] NOT NULL,
        [CanSale] [bit] NOT NULL,
        [CanHr] [bit] NOT NULL,
        [CanManageInventory] [bit] NOT NULL,
        [CanManageInventoryType] [bit] NOT NULL,
        [CanManageBooks] [bit] NOT NULL,
        [CanManageBookType] [bit] NOT NULL,
        [CanManageReports] [bit] NOT NULL,
        [CanManageCustomers] [bit] NOT NULL,
        CONSTRAINT [PK_dbo.RoleTypes] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[BusinessRules] (
        [Id] [int] NOT NULL IDENTITY,
        [VAT] [float] NOT NULL,
        CONSTRAINT [PK_dbo.BusinessRules] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[Customers] (
        [Id] [int] NOT NULL IDENTITY,
        [Name] [nvarchar](max) NOT NULL,
        [Code] [nvarchar](max),
        [ContactNo] [nvarchar](max) NOT NULL,
        [Email] [nvarchar](max) NOT NULL,
        [Image] [varbinary](max),
        [Address] [nvarchar](1000),
        CONSTRAINT [PK_dbo.Customers] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[EmailModels] (
        [Id] [int] NOT NULL IDENTITY,
        [ToEmail] [nvarchar](max) NOT NULL,
        [EMailBody] [nvarchar](max),
        [EmailSubject] [nvarchar](max),
        [EmailCC] [nvarchar](max),
        [EmailBCC] [nvarchar](max),
        CONSTRAINT [PK_dbo.EmailModels] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[Events] (
        [EventId] [int] NOT NULL IDENTITY,
        [Subject] [nvarchar](max),
        [Description] [nvarchar](max),
        [Start] [datetime] NOT NULL,
        [End] [datetime] NOT NULL,
        [ThemeColor] [nvarchar](max),
        [IsFullDay] [bit] NOT NULL,
        CONSTRAINT [PK_dbo.Events] PRIMARY KEY ([EventId])
    )
    CREATE TABLE [dbo].[IncomeVms] (
        [Id] [int] NOT NULL IDENTITY,
        [SalesTotal] [decimal](18, 2) NOT NULL,
        [PurchasesTotal] [decimal](18, 2) NOT NULL,
        [TotalIncome] [decimal](18, 2) NOT NULL,
        CONSTRAINT [PK_dbo.IncomeVms] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[InventoryIncomeVms] (
        [Id] [int] NOT NULL IDENTITY,
        [SalesTotal] [decimal](18, 2) NOT NULL,
        [OrdersTotal] [decimal](18, 2) NOT NULL,
        [TotalIncome] [decimal](18, 2) NOT NULL,
        CONSTRAINT [PK_dbo.InventoryIncomeVms] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[AspNetRoles] (
        [Id] [nvarchar](128) NOT NULL,
        [Name] [nvarchar](256) NOT NULL,
        CONSTRAINT [PK_dbo.AspNetRoles] PRIMARY KEY ([Id])
    )
    CREATE UNIQUE INDEX [RoleNameIndex] ON [dbo].[AspNetRoles]([Name])
    CREATE TABLE [dbo].[AspNetUserRoles] (
        [UserId] [nvarchar](128) NOT NULL,
        [RoleId] [nvarchar](128) NOT NULL,
        CONSTRAINT [PK_dbo.AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[AspNetUserRoles]([UserId])
    CREATE INDEX [IX_RoleId] ON [dbo].[AspNetUserRoles]([RoleId])
    CREATE TABLE [dbo].[SmsModels] (
        [Id] [int] NOT NULL IDENTITY,
        [ToNo] [nvarchar](max) NOT NULL,
        [SmsBody] [nvarchar](max),
        CONSTRAINT [PK_dbo.SmsModels] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[AspNetUsers] (
        [Id] [nvarchar](128) NOT NULL,
        [Email] [nvarchar](256),
        [EmailConfirmed] [bit] NOT NULL,
        [PasswordHash] [nvarchar](max),
        [SecurityStamp] [nvarchar](max),
        [PhoneNumber] [nvarchar](max),
        [PhoneNumberConfirmed] [bit] NOT NULL,
        [TwoFactorEnabled] [bit] NOT NULL,
        [LockoutEndDateUtc] [datetime],
        [LockoutEnabled] [bit] NOT NULL,
        [AccessFailedCount] [int] NOT NULL,
        [UserName] [nvarchar](256) NOT NULL,
        CONSTRAINT [PK_dbo.AspNetUsers] PRIMARY KEY ([Id])
    )
    CREATE UNIQUE INDEX [UserNameIndex] ON [dbo].[AspNetUsers]([UserName])
    CREATE TABLE [dbo].[AspNetUserClaims] (
        [Id] [int] NOT NULL IDENTITY,
        [UserId] [nvarchar](128) NOT NULL,
        [ClaimType] [nvarchar](max),
        [ClaimValue] [nvarchar](max),
        CONSTRAINT [PK_dbo.AspNetUserClaims] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[AspNetUserClaims]([UserId])
    CREATE TABLE [dbo].[AspNetUserLogins] (
        [LoginProvider] [nvarchar](128) NOT NULL,
        [ProviderKey] [nvarchar](128) NOT NULL,
        [UserId] [nvarchar](128) NOT NULL,
        CONSTRAINT [PK_dbo.AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey], [UserId])
    )
    CREATE INDEX [IX_UserId] ON [dbo].[AspNetUserLogins]([UserId])
    ALTER TABLE [dbo].[Books] ADD CONSTRAINT [FK_dbo.Books_dbo.BookCategories_ItemCategoryId] FOREIGN KEY ([ItemCategoryId]) REFERENCES [dbo].[BookCategories] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[PurchaseDetails] ADD CONSTRAINT [FK_dbo.PurchaseDetails_dbo.Books_ItemId] FOREIGN KEY ([ItemId]) REFERENCES [dbo].[Books] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[PurchaseDetails] ADD CONSTRAINT [FK_dbo.PurchaseDetails_dbo.Purchases_PurchaseId] FOREIGN KEY ([PurchaseId]) REFERENCES [dbo].[Purchases] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Purchases] ADD CONSTRAINT [FK_dbo.Purchases_dbo.Suppliers_SupplierId] FOREIGN KEY ([SupplierId]) REFERENCES [dbo].[Suppliers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Purchases] ADD CONSTRAINT [FK_dbo.Purchases_dbo.Employees_EmployeeId] FOREIGN KEY ([EmployeeId]) REFERENCES [dbo].[Employees] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Purchases] ADD CONSTRAINT [FK_dbo.Purchases_dbo.Outlets_OutletId] FOREIGN KEY ([OutletId]) REFERENCES [dbo].[Outlets] ([Id])
    ALTER TABLE [dbo].[Purchases] ADD CONSTRAINT [FK_dbo.Purchases_dbo.Customers_Customer_Id] FOREIGN KEY ([Customer_Id]) REFERENCES [dbo].[Customers] ([Id])
    ALTER TABLE [dbo].[Employees] ADD CONSTRAINT [FK_dbo.Employees_dbo.Employees_ReferenceId] FOREIGN KEY ([ReferenceId]) REFERENCES [dbo].[Employees] ([Id])
    ALTER TABLE [dbo].[Employees] ADD CONSTRAINT [FK_dbo.Employees_dbo.Outlets_OutletId] FOREIGN KEY ([OutletId]) REFERENCES [dbo].[Outlets] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Employees] ADD CONSTRAINT [FK_dbo.Employees_dbo.RoleTypes_RoleType_Id] FOREIGN KEY ([RoleType_Id]) REFERENCES [dbo].[RoleTypes] ([Id])
    ALTER TABLE [dbo].[Expenses] ADD CONSTRAINT [FK_dbo.Expenses_dbo.Employees_EmployeeId] FOREIGN KEY ([EmployeeId]) REFERENCES [dbo].[Employees] ([Id])
    ALTER TABLE [dbo].[Expenses] ADD CONSTRAINT [FK_dbo.Expenses_dbo.Outlets_OutletId] FOREIGN KEY ([OutletId]) REFERENCES [dbo].[Outlets] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[ExpenseDetails] ADD CONSTRAINT [FK_dbo.ExpenseDetails_dbo.Expenses_ExpenseId] FOREIGN KEY ([ExpenseId]) REFERENCES [dbo].[Expenses] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[ExpenseDetails] ADD CONSTRAINT [FK_dbo.ExpenseDetails_dbo.ExpenseItems_ExpenseItemId] FOREIGN KEY ([ExpenseItemId]) REFERENCES [dbo].[ExpenseItems] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[ExpenseItems] ADD CONSTRAINT [FK_dbo.ExpenseItems_dbo.ExpenseCategories_ExpenseCategoryId] FOREIGN KEY ([ExpenseCategoryId]) REFERENCES [dbo].[ExpenseCategories] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[InventorySales] ADD CONSTRAINT [FK_dbo.InventorySales_dbo.Employees_EmployeeId] FOREIGN KEY ([EmployeeId]) REFERENCES [dbo].[Employees] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[InventorySales] ADD CONSTRAINT [FK_dbo.InventorySales_dbo.Outlets_OutletId] FOREIGN KEY ([OutletId]) REFERENCES [dbo].[Outlets] ([Id])
    ALTER TABLE [dbo].[InventorySalesDetails] ADD CONSTRAINT [FK_dbo.InventorySalesDetails_dbo.Inventories_InventoryId] FOREIGN KEY ([InventoryId]) REFERENCES [dbo].[Inventories] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[InventorySalesDetails] ADD CONSTRAINT [FK_dbo.InventorySalesDetails_dbo.InventorySales_InventorySaleId] FOREIGN KEY ([InventorySaleId]) REFERENCES [dbo].[InventorySales] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Inventories] ADD CONSTRAINT [FK_dbo.Inventories_dbo.InventoryCategories_ItemCategoryId] FOREIGN KEY ([ItemCategoryId]) REFERENCES [dbo].[InventoryCategories] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[OrderDetails] ADD CONSTRAINT [FK_dbo.OrderDetails_dbo.Inventories_ItemId] FOREIGN KEY ([ItemId]) REFERENCES [dbo].[Inventories] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[OrderDetails] ADD CONSTRAINT [FK_dbo.OrderDetails_dbo.Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Orders] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Orders] ADD CONSTRAINT [FK_dbo.Orders_dbo.Employees_EmployeeId] FOREIGN KEY ([EmployeeId]) REFERENCES [dbo].[Employees] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Orders] ADD CONSTRAINT [FK_dbo.Orders_dbo.Outlets_OutletId] FOREIGN KEY ([OutletId]) REFERENCES [dbo].[Outlets] ([Id])
    ALTER TABLE [dbo].[Orders] ADD CONSTRAINT [FK_dbo.Orders_dbo.Suppliers_SupplierId] FOREIGN KEY ([SupplierId]) REFERENCES [dbo].[Suppliers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Orders] ADD CONSTRAINT [FK_dbo.Orders_dbo.Customers_Customer_Id] FOREIGN KEY ([Customer_Id]) REFERENCES [dbo].[Customers] ([Id])
    ALTER TABLE [dbo].[Sales] ADD CONSTRAINT [FK_dbo.Sales_dbo.Employees_EmployeeId] FOREIGN KEY ([EmployeeId]) REFERENCES [dbo].[Employees] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[Sales] ADD CONSTRAINT [FK_dbo.Sales_dbo.Outlets_OutletId] FOREIGN KEY ([OutletId]) REFERENCES [dbo].[Outlets] ([Id])
    ALTER TABLE [dbo].[SalesDetails] ADD CONSTRAINT [FK_dbo.SalesDetails_dbo.Books_BookId] FOREIGN KEY ([BookId]) REFERENCES [dbo].[Books] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[SalesDetails] ADD CONSTRAINT [FK_dbo.SalesDetails_dbo.Sales_SaleId] FOREIGN KEY ([SaleId]) REFERENCES [dbo].[Sales] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserRoles] ADD CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserRoles] ADD CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserClaims] ADD CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[AspNetUserLogins] ADD CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
    CREATE TABLE [dbo].[__MigrationHistory] (
        [MigrationId] [nvarchar](150) NOT NULL,
        [ContextKey] [nvarchar](300) NOT NULL,
        [Model] [varbinary](max) NOT NULL,
        [ProductVersion] [nvarchar](32) NOT NULL,
        CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
    )
    INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
    VALUES (N'201910061247127_InitialDatabase', N'SCRIPTERS.Migrations.Configuration',  
END

